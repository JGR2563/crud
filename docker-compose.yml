version: '3.8'

services:
  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: crud_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: always
    environment:
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: crud_db
      POSTGRES_HOST: db
      JWT_SECRET: ${JWT_SECRET}
      NODE_ENV: development
    ports:
      - "3000:3000"
    volumes:
      - ./backend:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      db:
        condition: service_healthy
    develop:
      watch:
        - action: sync
          path: ./backend
          target: /usr/src/app
          ignore:
            - node_modules/
            - .git/
            - .env

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    restart: always
    ports:
      - "80:80"
    depends_on:
      - backend
    volumes:
      - ./frontend:/usr/share/nginx/html
    develop:
      watch:
        - action: sync
          path: ./frontend
          target: /usr/share/nginx/html
          ignore:
            - node_modules/
            - .git/

volumes:
  postgres_data: